/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
@@if hasAuthors
@!AuthorsCommentText!@
@@else // hasAuthors
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
@@endif // hasAuthors
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class @!Classname!@!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

@!LIBNAMESPACE!@_BEGIN_NAMESPACE

@!IMPORTNAMESPACE!@

//! access the type of the class
inline
OSG::FieldContainerType &@!Classname!@Base::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 @!Classname!@Base::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 @!Classname!@Base::getClassGroupId(void)
{
    return _type.getGroupId();
}

@@if !isDecorator
  @@if !isDecoratable
/*------------------------------ get -----------------------------------*/

    @@BeginSFFieldLoop@@
      @@if !field.noAccess
        @@if !field.isStoreless
          @@if !field.isPtrField
//! Get the value of the @!Classname!@::_@!field.VarName!@ field.

inline
@!field.FullType!@ &@!Classname!@Base::edit@!field.Name!@(void)
{
    editSField(@!field.Name!@FieldMask);

    return _@!field.VarName!@.getValue();
}

//! Get the value of the @!Classname!@::_@!field.VarName!@ field.
inline
@!field.RetConst!@ @!field.FullType!@ @!field.RetRef!@@!Classname!@Base::get@!field.Name!@(void) const
{
    return _@!field.VarName!@.getValue();
}

//! Set the value of the @!Classname!@::_@!field.VarName!@ field.
inline
void @!Classname!@Base::set@!field.Name!@(const @!field.FullType!@ @!field.ArgRef!@value)
{
    editSField(@!field.Name!@FieldMask);

    _@!field.VarName!@.setValue(value);
}
          @@endif // !field.isPtrField
        @@endif // !field.isStoreless
      @@endif // !field.noAccess
    @@EndSFFieldLoop@@

    @@BeginMFFieldLoop@@
      @@if !field.noAccess
        @@if !field.isStoreless
          @@if !field.isPtrField
//! Get the value of the \a index element the @!Classname!@::_@!field.VarName!@ field.
inline
@!field.RetConst!@ @!field.FullType!@ @!field.RetRef!@@!Classname!@Base::get@!field.Name!@(const UInt32 index) const
{
    return _@!field.VarName!@[index];
}
          @@endif // !field.isPtrField
          @@if !field.isPtrField

inline
@!field.FieldTypeNS!@@!field.CARD!@@!field.FieldTypeCaps:17!@::reference @!Classname!@Base::edit@!field.Name!@(const UInt32 index)
{
    editMField(@!field.Name!@FieldMask, _@!field.VarName!@);

    return _@!field.VarName!@[index];
}
          @@endif // !field.isPtrField

        @@endif // !field.isStoreless
      @@endif // !field.noAccess
    @@EndMFFieldLoop@@
  @@endif // !isDecoratable
@@else // !isDecorator

inline
@!Parent!@ *@!Classname!@Base::getDecoratee(void) const
{
    return _sfDecoratee.getValue();
}

inline
void @!Classname!@Base::setDecoratee(@!Parent!@ * const value)
{
    editSField(DecorateeFieldMask);

    _sfDecoratee.setValue(value);
}
@@endif // !isDecorator

#ifdef OSG_MT_CPTR_ASPECT
inline
void @!Classname!@Base::execSync (      @!Classname!@Base *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);
@@if isDecorator

    if(FieldBits::NoField != (DecorateeFieldMask & whichField))
    {
        _sfDecoratee.syncWith(pFrom->_sfDecoratee);
    }
@@else // isDecorator
  @@BeginFieldLoop@@
    @@if !field.customSync
    @@if !field.isStoreless

      @@if field.isSField
    if(FieldBits::NoField != (@!field.Name!@FieldMask & whichField))
        _@!field.VarName!@.syncWith(pFrom->_@!field.VarName!@);
      @@else // field.isSField
    if(FieldBits::NoField != (@!field.Name!@FieldMask & whichField))
        _@!field.VarName!@.syncWith(pFrom->_@!field.VarName!@,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);
      @@endif // field.isSField
    @@endif
    @@endif // field.customSync
  @@EndFieldLoop@@
@@endif // isDecorator
}
#endif


inline
const Char8 *@!Classname!@Base::getClassname(void)
{
    return "@!Classname!@";
}
OSG_GEN_CONTAINERPTR(@!Classname!@);

@!LIBNAMESPACE!@_END_NAMESPACE

