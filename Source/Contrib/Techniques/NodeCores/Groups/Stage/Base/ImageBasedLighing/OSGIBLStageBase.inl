/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class IBLStage!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &IBLStageBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 IBLStageBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 IBLStageBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the IBLStage::_sfActivate field.

inline
bool &IBLStageBase::editActivate(void)
{
    editSField(ActivateFieldMask);

    return _sfActivate.getValue();
}

//! Get the value of the IBLStage::_sfActivate field.
inline
      bool  IBLStageBase::getActivate(void) const
{
    return _sfActivate.getValue();
}

//! Set the value of the IBLStage::_sfActivate field.
inline
void IBLStageBase::setActivate(const bool value)
{
    editSField(ActivateFieldMask);

    _sfActivate.setValue(value);
}
//! Get the value of the IBLStage::_sfEnvironmentTexUnit field.

inline
Int32 &IBLStageBase::editEnvironmentTexUnit(void)
{
    editSField(EnvironmentTexUnitFieldMask);

    return _sfEnvironmentTexUnit.getValue();
}

//! Get the value of the IBLStage::_sfEnvironmentTexUnit field.
inline
      Int32  IBLStageBase::getEnvironmentTexUnit(void) const
{
    return _sfEnvironmentTexUnit.getValue();
}

//! Set the value of the IBLStage::_sfEnvironmentTexUnit field.
inline
void IBLStageBase::setEnvironmentTexUnit(const Int32 value)
{
    editSField(EnvironmentTexUnitFieldMask);

    _sfEnvironmentTexUnit.setValue(value);
}
//! Get the value of the IBLStage::_sfIrradianceTexUnit field.

inline
Int32 &IBLStageBase::editIrradianceTexUnit(void)
{
    editSField(IrradianceTexUnitFieldMask);

    return _sfIrradianceTexUnit.getValue();
}

//! Get the value of the IBLStage::_sfIrradianceTexUnit field.
inline
      Int32  IBLStageBase::getIrradianceTexUnit(void) const
{
    return _sfIrradianceTexUnit.getValue();
}

//! Set the value of the IBLStage::_sfIrradianceTexUnit field.
inline
void IBLStageBase::setIrradianceTexUnit(const Int32 value)
{
    editSField(IrradianceTexUnitFieldMask);

    _sfIrradianceTexUnit.setValue(value);
}
//! Get the value of the IBLStage::_sfPreFilterTexUnit field.

inline
Int32 &IBLStageBase::editPreFilterTexUnit(void)
{
    editSField(PreFilterTexUnitFieldMask);

    return _sfPreFilterTexUnit.getValue();
}

//! Get the value of the IBLStage::_sfPreFilterTexUnit field.
inline
      Int32  IBLStageBase::getPreFilterTexUnit(void) const
{
    return _sfPreFilterTexUnit.getValue();
}

//! Set the value of the IBLStage::_sfPreFilterTexUnit field.
inline
void IBLStageBase::setPreFilterTexUnit(const Int32 value)
{
    editSField(PreFilterTexUnitFieldMask);

    _sfPreFilterTexUnit.setValue(value);
}
//! Get the value of the IBLStage::_sfBrdfLutTexUnit field.

inline
Int32 &IBLStageBase::editBrdfLutTexUnit(void)
{
    editSField(BrdfLutTexUnitFieldMask);

    return _sfBrdfLutTexUnit.getValue();
}

//! Get the value of the IBLStage::_sfBrdfLutTexUnit field.
inline
      Int32  IBLStageBase::getBrdfLutTexUnit(void) const
{
    return _sfBrdfLutTexUnit.getValue();
}

//! Set the value of the IBLStage::_sfBrdfLutTexUnit field.
inline
void IBLStageBase::setBrdfLutTexUnit(const Int32 value)
{
    editSField(BrdfLutTexUnitFieldMask);

    _sfBrdfLutTexUnit.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void IBLStageBase::execSync (      IBLStageBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (ActivateFieldMask & whichField))
        _sfActivate.syncWith(pFrom->_sfActivate);

    if(FieldBits::NoField != (EnvironmentTexUnitFieldMask & whichField))
        _sfEnvironmentTexUnit.syncWith(pFrom->_sfEnvironmentTexUnit);

    if(FieldBits::NoField != (IrradianceTexUnitFieldMask & whichField))
        _sfIrradianceTexUnit.syncWith(pFrom->_sfIrradianceTexUnit);

    if(FieldBits::NoField != (PreFilterTexUnitFieldMask & whichField))
        _sfPreFilterTexUnit.syncWith(pFrom->_sfPreFilterTexUnit);

    if(FieldBits::NoField != (BrdfLutTexUnitFieldMask & whichField))
        _sfBrdfLutTexUnit.syncWith(pFrom->_sfBrdfLutTexUnit);

    if(FieldBits::NoField != (EnvironmentTexDescFieldMask & whichField))
        _sfEnvironmentTexDesc.syncWith(pFrom->_sfEnvironmentTexDesc);

    if(FieldBits::NoField != (IrradianceTexDescFieldMask & whichField))
        _sfIrradianceTexDesc.syncWith(pFrom->_sfIrradianceTexDesc);

    if(FieldBits::NoField != (PreFilterTexDescFieldMask & whichField))
        _sfPreFilterTexDesc.syncWith(pFrom->_sfPreFilterTexDesc);

    if(FieldBits::NoField != (BrdfLutTexDescFieldMask & whichField))
        _sfBrdfLutTexDesc.syncWith(pFrom->_sfBrdfLutTexDesc);

    if(FieldBits::NoField != (EnvironmentTexObjChunkFieldMask & whichField))
        _sfEnvironmentTexObjChunk.syncWith(pFrom->_sfEnvironmentTexObjChunk);

    if(FieldBits::NoField != (IrradianceTexObjChunkFieldMask & whichField))
        _sfIrradianceTexObjChunk.syncWith(pFrom->_sfIrradianceTexObjChunk);

    if(FieldBits::NoField != (PreFilterTexObjChunkFieldMask & whichField))
        _sfPreFilterTexObjChunk.syncWith(pFrom->_sfPreFilterTexObjChunk);

    if(FieldBits::NoField != (BrdfLutTexObjChunkFieldMask & whichField))
        _sfBrdfLutTexObjChunk.syncWith(pFrom->_sfBrdfLutTexObjChunk);
}
#endif


inline
const Char8 *IBLStageBase::getClassname(void)
{
    return "IBLStage";
}
OSG_GEN_CONTAINERPTR(IBLStage);

OSG_END_NAMESPACE

